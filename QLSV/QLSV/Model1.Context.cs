//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLSV
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLSinhVienCon : DbContext
    {
        public QLSinhVienCon()
            : base("name=QLSinhVienCon")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<GiangVien> GiangViens { get; set; }
        public virtual DbSet<HocKy> HocKies { get; set; }
        public virtual DbSet<HocPhan> HocPhans { get; set; }
        public virtual DbSet<KetQuaLopHP> KetQuaLopHPs { get; set; }
        public virtual DbSet<Khoa> Khoas { get; set; }
        public virtual DbSet<LopChuyenNganh> LopChuyenNganhs { get; set; }
        public virtual DbSet<LopHP> LopHPs { get; set; }
        public virtual DbSet<SinhVien> SinhViens { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TongKetKy> TongKetKies { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_xoaGV(Nullable<int> magv)
        {
            var magvParameter = magv.HasValue ?
                new ObjectParameter("magv", magv) :
                new ObjectParameter("magv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_xoaGV", magvParameter);
        }
    
        public virtual int sp_xoaK(Nullable<int> mak)
        {
            var makParameter = mak.HasValue ?
                new ObjectParameter("mak", mak) :
                new ObjectParameter("mak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_xoaK", makParameter);
        }
    
        public virtual int sp_xoaSV(Nullable<int> masv)
        {
            var masvParameter = masv.HasValue ?
                new ObjectParameter("masv", masv) :
                new ObjectParameter("masv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_xoaSV", masvParameter);
        }
    
        public virtual int themKQLHP(Nullable<int> masv, Nullable<int> malhp)
        {
            var masvParameter = masv.HasValue ?
                new ObjectParameter("masv", masv) :
                new ObjectParameter("masv", typeof(int));
    
            var malhpParameter = malhp.HasValue ?
                new ObjectParameter("malhp", malhp) :
                new ObjectParameter("malhp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("themKQLHP", masvParameter, malhpParameter);
        }
    
        public virtual ObjectResult<xemDSGV_Result> xemDSGV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSGV_Result>("xemDSGV");
        }
    
        public virtual ObjectResult<xemDSHP_Result> xemDSHP(string key)
        {
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSHP_Result>("xemDSHP", keyParameter);
        }
    
        public virtual ObjectResult<xemDSK_Result> xemDSK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSK_Result>("xemDSK");
        }
    
        public virtual ObjectResult<xemDSLCN_Result> xemDSLCN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSLCN_Result>("xemDSLCN");
        }
    
        public virtual ObjectResult<xemDSLHP_Result> xemDSLHP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSLHP_Result>("xemDSLHP");
        }
    
        public virtual ObjectResult<xemDSSVLHP_Result> xemDSSVLHP(Nullable<int> malop)
        {
            var malopParameter = malop.HasValue ?
                new ObjectParameter("malop", malop) :
                new ObjectParameter("malop", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSSVLHP_Result>("xemDSSVLHP", malopParameter);
        }
    
        public virtual int xoaHP(Nullable<int> mahp)
        {
            var mahpParameter = mahp.HasValue ?
                new ObjectParameter("mahp", mahp) :
                new ObjectParameter("mahp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xoaHP", mahpParameter);
        }
    
        public virtual int xoaKQLHP(Nullable<int> masv, Nullable<int> malhp)
        {
            var masvParameter = masv.HasValue ?
                new ObjectParameter("masv", masv) :
                new ObjectParameter("masv", typeof(int));
    
            var malhpParameter = malhp.HasValue ?
                new ObjectParameter("malhp", malhp) :
                new ObjectParameter("malhp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xoaKQLHP", masvParameter, malhpParameter);
        }
    
        public virtual int xoaLCN(Nullable<int> malcn)
        {
            var malcnParameter = malcn.HasValue ?
                new ObjectParameter("malcn", malcn) :
                new ObjectParameter("malcn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xoaLCN", malcnParameter);
        }
    
        public virtual int xoaLHP(Nullable<int> malhp)
        {
            var malhpParameter = malhp.HasValue ?
                new ObjectParameter("malhp", malhp) :
                new ObjectParameter("malhp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xoaLHP", malhpParameter);
        }
    
        public virtual ObjectResult<xemDSSVLHPTheoTen_Result> xemDSSVLHPTheoTen(Nullable<int> malop, string key)
        {
            var malopParameter = malop.HasValue ?
                new ObjectParameter("malop", malop) :
                new ObjectParameter("malop", typeof(int));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSSVLHPTheoTen_Result>("xemDSSVLHPTheoTen", malopParameter, keyParameter);
        }
    
        public virtual ObjectResult<xemDSDiemSV_Result> xemDSDiemSV(Nullable<int> malhp)
        {
            var malhpParameter = malhp.HasValue ?
                new ObjectParameter("malhp", malhp) :
                new ObjectParameter("malhp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSDiemSV_Result>("xemDSDiemSV", malhpParameter);
        }
    
        public virtual ObjectResult<xemDSDiemSVTheoTen_Result> xemDSDiemSVTheoTen(Nullable<int> malhp, string key)
        {
            var malhpParameter = malhp.HasValue ?
                new ObjectParameter("malhp", malhp) :
                new ObjectParameter("malhp", typeof(int));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSDiemSVTheoTen_Result>("xemDSDiemSVTheoTen", malhpParameter, keyParameter);
        }
    
        public virtual int suaKQLHP(Nullable<int> masv, Nullable<int> malhp, Nullable<double> diemcc, Nullable<double> diemtx, Nullable<double> diemthi)
        {
            var masvParameter = masv.HasValue ?
                new ObjectParameter("masv", masv) :
                new ObjectParameter("masv", typeof(int));
    
            var malhpParameter = malhp.HasValue ?
                new ObjectParameter("malhp", malhp) :
                new ObjectParameter("malhp", typeof(int));
    
            var diemccParameter = diemcc.HasValue ?
                new ObjectParameter("diemcc", diemcc) :
                new ObjectParameter("diemcc", typeof(double));
    
            var diemtxParameter = diemtx.HasValue ?
                new ObjectParameter("diemtx", diemtx) :
                new ObjectParameter("diemtx", typeof(double));
    
            var diemthiParameter = diemthi.HasValue ?
                new ObjectParameter("diemthi", diemthi) :
                new ObjectParameter("diemthi", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("suaKQLHP", masvParameter, malhpParameter, diemccParameter, diemtxParameter, diemthiParameter);
        }
    
        public virtual ObjectResult<xemDSSV_Result> xemDSSV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemDSSV_Result>("xemDSSV");
        }
    
        public virtual int capnhatdiemvasotinchi(Nullable<int> mahk, Nullable<int> masv)
        {
            var mahkParameter = mahk.HasValue ?
                new ObjectParameter("mahk", mahk) :
                new ObjectParameter("mahk", typeof(int));
    
            var masvParameter = masv.HasValue ?
                new ObjectParameter("masv", masv) :
                new ObjectParameter("masv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("capnhatdiemvasotinchi", mahkParameter, masvParameter);
        }
    
        public virtual ObjectResult<xemKQHT_Result> xemKQHT(Nullable<int> maL, Nullable<int> mahk)
        {
            var maLParameter = maL.HasValue ?
                new ObjectParameter("maL", maL) :
                new ObjectParameter("maL", typeof(int));
    
            var mahkParameter = mahk.HasValue ?
                new ObjectParameter("mahk", mahk) :
                new ObjectParameter("mahk", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xemKQHT_Result>("xemKQHT", maLParameter, mahkParameter);
        }
    }
}
